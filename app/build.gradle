plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'

    // <hilt>
    // id 'dagger.hilt.android.plugin'
    id 'com.google.dagger.hilt.android'
    // </hilt>

    // <google firebase & others>
    id 'com.google.devtools.ksp' version '1.7.20-1.0.7' // check to update with kotlin_version
    id 'com.google.gms.google-services'
    id 'com.google.firebase.firebase-perf'
    id 'com.google.firebase.crashlytics'
}

//applovin {
//    apiKey "V5UHiAh115VLQ71eicJR_InTwDfnDTkcZU56C8nR111COyQu_1ULUqbVPRST69e9ly0fIzCTLeCmk20lHVJa0y"
//}


android {
    compileSdk 33

    signingConfigs {
        release {
            storeFile file('D:\\android-prj\\sreen-mirroring-cast-tv\\key\\key_screen_mirroring.jks')
            storePassword '123456'
            keyPassword '123456'
            keyAlias 'key0'
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    applicationVariants.all { variant ->
//        if (variant.name.contains("debug")) {
//            variant.mergedFlavor.applicationId = project.properties['dev.package.id']
//        } else {
            variant.mergedFlavor.applicationId = project.properties['prod.package.id']
//        }
    }


    defaultConfig {
        minSdk 24
        targetSdk 33
        versionCode 17
        versionName "2.0.3"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    buildTypes {
        debug {
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
//        compose true
    }
//    composeOptions {
//        kotlinCompilerExtensionVersion kotlin_compose_compiler_version
//    }
    kapt {
        useBuildCache = true
    }

    lintOptions {
        disable 'ComposableNaming'
    }

    // under scripts helping Android Studio lookup for generated code from KSP & compose-destinations
    applicationVariants.all { variant ->
        kotlin.sourceSets {
            getByName(variant.name) {
                kotlin.srcDir("build/generated/ksp/${variant.name}/kotlin")
            }
        }
    }
}

dependencies {
    implementation project(path: ':screen-stream')

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.5.0'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.1'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.1'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'junit:junit:junit-jupiter'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
//    implementation 'com.ms-square:expandableTextView:0.1.4'

    implementation platform('com.google.firebase:firebase-bom:31.0.1')
    implementation 'com.google.firebase:firebase-core'
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-dynamic-module-support:16.0.0-beta02'
    implementation 'com.google.firebase:firebase-config-ktx'
    implementation 'com.google.firebase:firebase-messaging'
    implementation 'com.google.firebase:firebase-messaging-ktx:23.0.7'
    // Add the Firebase SDK for Crashlytics.
    implementation 'com.google.firebase:firebase-crashlytics'
    // Add the dependency for the Performance Monitoring library
    implementation 'com.google.firebase:firebase-perf'

    //overided
//    implementation "com.google.dagger:hilt-android:2.42"
//    kapt "com.google.dagger:hilt-compiler:2.42"
//    implementation 'androidx.hilt:hilt-navigation-fragment:1.0.0'
//    implementation 'androidx.hilt:hilt-work:1.0.0'
    // When using Kotlin.
    kapt 'androidx.hilt:hilt-compiler:1.0.0'
    // When using Java.
//    annotationProcessor 'androidx.hilt:hilt-compiler:1.0.0'
//    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'
    implementation("com.github.iamironz:binaryprefs:1.0.1")
    implementation("com.elvishew:xlog:1.11.0")
    implementation 'com.jakewharton.timber:timber:5.0.1'
    implementation 'io.github.chaosleung:pinview:1.4.4'

    // recyclerview
    implementation("androidx.recyclerview:recyclerview:1.2.1")
    // For control over item selection of both touch and mouse driven selection
    implementation("androidx.recyclerview:recyclerview-selection:1.1.0")

    // Glide
    implementation 'com.github.bumptech.glide:glide:4.13.2'

    implementation 'com.airbnb.android:lottie:5.2.0'

    // ViewModel
    // Lifecycle
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.1'
    implementation "androidx.lifecycle:lifecycle-common-java8:2.5.1"
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'
    kapt 'androidx.lifecycle:lifecycle-compiler:2.5.1'

    //ads
    implementation 'com.google.android.gms:play-services-ads:21.3.0'

    //
    implementation("androidx.lifecycle:lifecycle-livedata:2.5.1")
    implementation("androidx.lifecycle:lifecycle-common:2.5.1")

    implementation("com.afollestad.material-dialogs:core:3.3.0")
    implementation("com.afollestad.material-dialogs:color:3.3.0")
    implementation("com.afollestad.material-dialogs:input:3.3.0")
    implementation("com.afollestad.material-dialogs:lifecycle:3.3.0")

    // camera preview
    // CameraX core library
    def camerax_version = '1.1.0'
    implementation "androidx.camera:camera-core:$camerax_version"
    // CameraX Camera2 extensions
    implementation "androidx.camera:camera-camera2:$camerax_version"
    // CameraX Lifecycle library
    implementation "androidx.camera:camera-lifecycle:$camerax_version"
    // CameraX View class
    implementation "androidx.camera:camera-view:$camerax_version"

    implementation 'androidx.work:work-runtime-ktx:2.7.1'
    implementation 'com.google.android.play:app-update-ktx:2.0.0'

    //google-play billing
    def billing_version = "5.0.0"

    implementation "com.android.billingclient:billing:$billing_version"
    //unity-ads
    implementation  'com.unity3d.ads:unity-ads:4.4.1'
    implementation  'com.google.ads.mediation:unity:4.4.1.0'

    //ironsource
    implementation  'com.google.ads.mediation:ironsource:7.2.3.1.0'


    //============================================================ cast integration


    implementation(project(":Connect-SDK"))
    implementation(project(":extensions"))
    // sofi libs
//    implementation "dev.sofi:setting:1.0.1"
//    implementation "dev.sofi:ads:1.0.25"
//     implementation(project(":ads"))

    // <hilt>
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
    // <hilt>

    // <compose>
    // Import the Compose BOM
    def composeBom = platform('androidx.compose:compose-bom:2022.10.00')
    implementation composeBom
    androidTestImplementation composeBom
    // get libraries here: https://developer.android.com/jetpack/compose/setup#bom-version-mapping

    implementation "androidx.compose.ui:ui"
    implementation "androidx.compose.ui:ui-tooling-preview"
    implementation "androidx.compose.material:material"
    implementation "androidx.compose.material:material-icons-core"
    implementation "androidx.compose.material:material-icons-extended"
    implementation "androidx.compose.material3:material3"
    implementation "androidx.compose.material3:material3-window-size-class"
    implementation "androidx.compose.animation:animation"
    implementation "androidx.compose.foundation:foundation"
    implementation "androidx.compose.runtime:runtime"
    implementation 'androidx.compose.runtime:runtime-livedata'
    // + compose navigation & hilt for it
    implementation "androidx.navigation:navigation-compose:2.5.3"
    implementation "androidx.hilt:hilt-navigation-compose:$hilt_compose_version"
//    // + upgrade compose navigation with compose-destinations
//    implementation 'io.github.raamcosta.compose-destinations:core:1.7.22-beta'
//    ksp 'io.github.raamcosta.compose-destinations:ksp:1.7.22-beta'
    // </compose>

    // <accompanist>
    implementation("io.coil-kt:coil-compose:2.2.2")
    implementation "com.google.accompanist:accompanist-permissions:$accompanist_version"
    implementation "com.google.accompanist:accompanist-systemuicontroller:$accompanist_version"
    implementation "com.google.accompanist:accompanist-pager:$accompanist_version"
    implementation "com.google.accompanist:accompanist-flowlayout:$accompanist_version"
    implementation "com.google.accompanist:accompanist-systemuicontroller:$accompanist_version"
    // </accompanist>

    // ViewModel
    // Lifecycle
    implementation 'androidx.activity:activity-compose:1.6.1'
    implementation("androidx.startup:startup-runtime:1.1.1")


}
kapt {
    correctErrorTypes true
}