pluginManagement {
    repositories {
        gradlePluginPortal()
        google()
        mavenCentral()
        maven {
            //IronSource
            url "https://android-sdk.is.com/"
        }
        maven { url 'https://jitpack.io' }
        google()
        mavenCentral()
    }
}
dependencyResolutionManagement {
    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)

    // get Sofi libs
    def locals = new Properties()
    locals.load(file("local.properties").newDataInputStream())
    println("[SOFI] Set up remote repository with user : ${locals["space.username"]}")

    repositories {
        maven {
            //IronSource
            url "https://android-sdk.is.com/"
        }
        maven { url 'https://jitpack.io' }
        google()
        mavenCentral()
        maven { url "https://artifact.bytedance.com/repository/pangle" }
        maven {
            url "https://maven.pkg.jetbrains.space/sofigo/p/sofi/sofi-setting"
            credentials {
                username = spaceUsername
                password = spacePassword
            }
        }
        maven {
            url "https://maven.pkg.jetbrains.space/sofigo/p/sofi/sofi-ads"
            credentials {
                username = spaceUsername
                password = spacePassword
            }
        }

        maven {
            //IronSource
            url "https://android-sdk.is.com/"
        }
        def hakis = [
                'haki-ads',
                'haki-state',
                'haki-dialog'
        ]
        hakis.forEach { repoId ->
            maven {
                url "https://maven.pkg.jetbrains.space/oshot/p/haki/$repoId"
                credentials {
                    username = spaceUsername
                    password = spacePassword
                }
            }
        }
    }
}
rootProject.name = "sreen-mirroring-cast-tv"
include ':app'
include ':screen-stream'
include ':Connect-SDK'
//include ":ads"
//project(":ads").projectDir = file("../sofi-ads/ads")
include ':extensions'

